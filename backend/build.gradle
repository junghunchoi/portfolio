buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}


plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.14'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
}


springBoot {
    mainClass = 'com.backend.BackendApplication'
}

java {
    sourceCompatibility = '14'
    targetCompatibility = '14'
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}"
    implementation 'org.modelmapper:modelmapper:3.1.0'


    implementation 'org.springframework.boot:spring-boot-starter-validation'


    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    implementation 'net.coobird:thumbnailator:0.4.16'

    implementation 'com.fasterxml.jackson.core:jackson-databind:2.12.3'

    implementation group: 'com.googlecode.json-simple', name: 'json-simple', version: '1.1.1'

    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    implementation 'org.springframework.boot:spring-boot-starter-security'

    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    implementation 'com.google.code.gson:gson:2.8.9'

    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.webjars:sockjs-client:1.5.1'
    implementation 'org.webjars:stomp-websocket:2.3.4'

    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'com.github.ben-manes.caffeine:caffeine'

    annotationProcessor(
            "javax.persistence:javax.persistence-api",
            "javax.annotation:javax.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jpa")
}

bootRun {
    String activeProfile = System.properties['spring.profiles.active']
    systemProperty "spring.profiles.active", activeProfile
}


processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE

    from('src/main/resources') {
        include 'application.properties'
        if (project.hasProperty('profile')) {
            include "application-${project.profile}.properties"
        }
    }
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/resources-${profile}"
        }
    }
}


tasks.named('test') {
    useJUnitPlatform()
}